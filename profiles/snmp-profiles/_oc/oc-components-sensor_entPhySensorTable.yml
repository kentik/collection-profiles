# oc-components_entPhysicalTable.yml
# SNMP: 
#   - ENTITY-SENSOR-MIB::entPhySensorTable
#   - ENTITY-MIB::entPhysicalTable
# OC: The OC path does not exist - we are extending this as /components/component/state
# Kentik-path: /components/sensor

# Profile intents to collect metadata and metrics about device components from SNMP ENTITY-MIB and ENTITY-SENSOR-MIB
# ENTITY-SENSOR-MIB does not have exact equivalent in the OC models, 
# but trying to normalize metrics to OC-like.

---

extends:
  - oc-components_entPhysicalTable.yml

metrics:

  - MIB: /components/
    table:
      OID: .1.3.6.1.2.1.99.1.1.1    # ENTITY-SENSOR-MIB::entPhySensorTable
      name: sensor

    symbols:

      - tag: sensor:oper-status
        OID: .1.3.6.1.2.1.99.1.1.1.5
        name: entPhySensorOperStatus
        # An object using this data type represents the operational status of a physical sensor. 
        # The value 'ok(1)' indicates that the agent can obtain the sensor value. 
        # The value 'unavailable(2)' indicates that the agent presently cannot obtain the sensor value. 
        # The value 'nonoperational(3)' indicates that the agent believes the sensor is broken. The sensor could have a hard failure (disconnected wire), or a soft failure such as out- of-range, jittery, or wildly fluctuating readings.
        # enum:
        #   ok: 1
        #   unavailable: 2
        #   nonoperational: 3
        # script: |
        #   def main(n):
        #     # UNKNOWN (0)
        #     if n["sensor:oper-status"] == 2:
        #       n["sensor:oper-status"] = 0
        #     # INACTIVE - down (2)
        #     if n["sensor:oper-status"] == 3:
        #       n["sensor:oper-status"] = 2
        #     return None

      # using those here in metrics, so that we are able to calculate the exact value
      # - tag: sensor-metric:type
      #   OID: .1.3.6.1.2.1.99.1.1.1.1
      #   name: entPhySensorType
        
      - tag: sensor-metric:scale
        OID: .1.3.6.1.2.1.99.1.1.1.2
        name: entPhySensorScale

      - tag: sensor-metric:precision
        OID: .1.3.6.1.2.1.99.1.1.1.3
        name: entPhySensorPrecision

      - tag: sensor-metric:value
        OID: .1.3.6.1.2.1.99.1.1.1.4
        name: entPhySensorValue
        script: |
          load('math.star', 'math')
          def main(n):
            # UNKNOWN (0)
            if n["sensor:oper-status"] == 2:
              n["sensor:oper-status"] = 0
            # INACTIVE - down (2)
            if n["sensor:oper-status"] == 3:
              n["sensor:oper-status"] = 2
            scale = int(n.pop("sensor-metric:scale"))
            precision = int(n.pop("sensor-metric:precision"))
            value = int(n["sensor-metric:value"])
            scale_size = 3 * (scale - 9)
            n["sensor-metric:exact-value"] = float(value * math.pow(10, scale_size) / math.pow(10, precision))
            return None


    metric_tags:

      - tag: components:name
        column:
          OID: .1.3.6.1.2.1.47.1.1.1.1.2
          name: entPhysicalDescr

      - tag: components:description
        column:
          OID: .1.3.6.1.2.1.47.1.1.1.1.7
          name: entPhysicalName

      - tag: sensor:type
        column:
          OID: .1.3.6.1.2.1.99.1.1.1.1
          name: entPhySensorType
          enum:
            other: 1
            unknown: 2
            voltsAC: 3
            voltsDC: 4
            amperes: 5
            watts: 6
            hertz: 7
            celsius: 8
            percentRH: 9
            rpm: 10
            cmm: 11
            truthvalue: 12
            specialEnum: 13
            dBm: 14
            dB: 15
        
      - tag: sensor:scale
        column:
          OID: .1.3.6.1.2.1.99.1.1.1.2
          name: entPhySensorScale
          enum:
            yocto: 1
            zepto: 2
            atto: 3
            femto: 4
            pico: 5
            nano: 6
            micro: 7
            milli: 8
            units: 9
            kilo: 10
            mega: 11
            giga: 12
            tera: 13
            exa: 14
            peta: 15
            zetta: 16
            yotta: 17
        
      - tag: sensor:precision
        column:
          OID: .1.3.6.1.2.1.99.1.1.1.3
          name: entPhySensorPrecision
        
      - tag: sensor:units
        column:
          OID: .1.3.6.1.2.1.99.1.1.1.6
          name: entPhySensorUnitsDisplay
      